import React, { useState, useEffect } from 'react';
import axios from 'axios';

function App() {
  const [jobs, setJobs] = useState([]);
  const [newJob, setNewJob] = useState({
    address: '',
    coordinates: '',
    duration: '',
    tasks: '',
    date: '',
    start_time: '',
    postal_code_id: '',
    validated: false
  });

  useEffect(() => {
    fetchJobs();
  }, []);

  const fetchJobs = () => {
    axios.get('http://localhost:5001/jobs')
      .then(response => {
        setJobs(response.data);
      })
      .catch(error => {
        console.error('Error fetching jobs:', error);
      });
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setNewJob({
      ...newJob,
      [name]: value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    // Convert coordinates to the required format
    const formattedJob = {
      ...newJob,
      coordinates: `SRID=4326;POINT(${newJob.coordinates})`
    };

    axios.post('http://localhost:5001/jobs', formattedJob)
      .then(response => {
        console.log(response.data);
        fetchJobs(); // Fetch the updated list of jobs after adding a new one
      })
      .catch(error => {
        console.error('Error adding job:', error);
      });
  };

  return (
    <div className="App">
      <h1>Jobs List</h1>
      <ul>
        {jobs.map((job) => (
          <li key={job.job_id}>
            {job.address} - {job.duration} mins - {job.date} - {job.start_time}
          </li>
        ))}
      </ul>

      <h2>Add New Job</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Address:</label>
          <input type="text" name="address" value={newJob.address} onChange={handleChange} required />
        </div>
        <div>
          <label>Coordinates (longitude latitude):</label>
          <input type="text" name="coordinates" placeholder="longitude latitude" value={newJob.coordinates} onChange={handleChange} required />
        </div>
        <div>
          <label>Duration (mins):</label>
          <input type="number" name="duration" value={newJob.duration} onChange={handleChange} required />
        </div>
        <div>
          <label>Tasks:</label>
          <input type="text" name="tasks" value={newJob.tasks} onChange={handleChange} />
        </div>
        <div>
          <label>Date:</label>
          <input type="date" name="date" value={newJob.date} onChange={handleChange} />
        </div>
        <div>
          <label>Start Time:</label>
          <input type="time" name="start_time" value={newJob.start_time} onChange={handleChange} />
        </div>
        <div>
          <label>Postal Code ID:</label>
          <input type="text" name="postal_code_id" value={newJob.postal_code_id} onChange={handleChange} required />
        </div>
        <div>
          <label>
            Validated:
            <input type="checkbox" name="validated" checked={newJob.validated} onChange={(e) => setNewJob({ ...newJob, validated: e.target.checked })} />
          </label>
        </div>
        <button type="submit">Add Job</button>
      </form>
    </div>
  );
}

export default App;

